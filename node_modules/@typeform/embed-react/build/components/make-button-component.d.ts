import { CSSProperties, ReactNode } from 'react';
declare type ButtonComponentBaseProps = {
    id: string;
    style?: CSSProperties;
    className?: string;
    children: ReactNode;
};
declare type ButtonComponentProps<T> = T & ButtonComponentBaseProps;
declare type CreateFnProps<T> = Omit<ButtonComponentProps<T>, keyof ButtonComponentBaseProps>;
declare type CreateFn<T> = (id: string, props: CreateFnProps<T>) => GenericEmbed;
declare type GenericEmbed = {
    unmount: () => void;
    open: () => void;
};
declare function makeButtonComponent<T>(createFn: CreateFn<T>, cssFilename: string): ({ id, children, style, className, ...props }: ButtonComponentProps<T>) => JSX.Element;
export { makeButtonComponent };
//# sourceMappingURL=make-button-component.d.ts.map