{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Pedro Costa\\\\Desktop\\\\ETHProj\\\\kickstart\\\\pages\\\\subscribe.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport { Form, Button, Input, Message, Grid, Divider, Header } from 'semantic-ui-react';\nimport Layout from '../components/Layout';\nimport factory from '../ethereum/factory';\nimport web3 from '../ethereum/web3';\nimport { Link, Router } from '../routes'; //Not going to use Link, but it exists\n\nclass Subscribe extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      email: '',\n      errorMessage: '',\n      successMessage: '',\n      loading: false\n    });\n\n    _defineProperty(this, \"onSubmit\", async event => {\n      event.preventDefault(); //keeps browser from submitting form to backed server\n\n      this.setState({\n        loading: true,\n        errorMessage: '',\n        successMessage: ''\n      });\n\n      try {\n        // 3. Send a request to our API with the user's email address.\n        const res = await fetch('/api/subscribe', {\n          body: JSON.stringify({\n            email: this.state.email\n          }),\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          method: 'POST'\n        });\n        Router.pushRoute('/');\n      } catch (err) {\n        this.setState({\n          errorMessage: err.message\n        });\n      }\n\n      this.setState({\n        loading: false,\n        errorMessage: '',\n        successMessage: 'Success! ðŸŽ‰ You are now subscribed to the newsletter.'\n      });\n    });\n  }\n\n  render() {\n    return __jsx(Layout, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 7\n      }\n    }, __jsx(Grid, {\n      container: true,\n      stackable: true,\n      verticalAlign: \"middle\",\n      style: {\n        padding: '8em 0em'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }\n    }, __jsx(Grid.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }\n    }, __jsx(Header, {\n      as: \"h3\",\n      style: {\n        fontSize: '2em'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }\n    }, \"Stay up to date with the latest developments\", ' ')), __jsx(Grid.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }\n    }, __jsx(Grid.Column, {\n      width: 8,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }\n    }, __jsx(Header, {\n      as: \"h3\",\n      style: {\n        fontSize: '2em'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 15\n      }\n    }, \"Stay up to date with the latest developments\", ' '), __jsx(Form, {\n      onSubmit: this.onSubmit,\n      error: !!this.state.errorMessage,\n      success: !!this.state.successMessage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 15\n      }\n    }, __jsx(Form.Field, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }\n    }, __jsx(Input, {\n      className: \"form-control mb-4 p-4\",\n      required: true,\n      type: \"email\",\n      placeholder: \"Email\",\n      value: this.state.email,\n      onChange: event => this.setState({\n        email: event.target.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 19\n      }\n    }), __jsx(Message, {\n      error: true,\n      header: \"Oops\",\n      content: this.state.errorMessage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 19\n      }\n    }), __jsx(Message, {\n      success: true,\n      header: \"Good news everyone!\",\n      content: this.state.successMessage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 19\n      }\n    }), __jsx(Button, {\n      loading: this.state.loading,\n      style: {\n        marginTop: '10px'\n      },\n      primary: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 19\n      }\n    }, \"Keep Me Updated!\")))), __jsx(Grid.Column, {\n      floated: \"right\",\n      width: 7,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 13\n      }\n    }, __jsx(Header, {\n      as: \"h3\",\n      style: {\n        fontSize: '2em'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 15\n      }\n    }, \"Interested in our initiative?\"), __jsx(\"p\", {\n      style: {\n        fontSize: '1.33em'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 15\n      }\n    }, \"Become an early adopter to help shape the future and be part of what comes next. Subscribe to the newsletter to stay up to date with our progress!\")))));\n  }\n\n}\n\nexport default Subscribe;","map":{"version":3,"sources":["C:/Users/Pedro Costa/Desktop/ETHProj/kickstart/pages/subscribe.js"],"names":["React","Component","Form","Button","Input","Message","Grid","Divider","Header","Layout","factory","web3","Link","Router","Subscribe","email","errorMessage","successMessage","loading","event","preventDefault","setState","res","fetch","body","JSON","stringify","state","headers","method","pushRoute","err","message","render","padding","fontSize","onSubmit","target","value","marginTop"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {\n  Form,\n  Button,\n  Input,\n  Message,\n  Grid,\n  Divider,\n  Header,\n} from 'semantic-ui-react';\nimport Layout from '../components/Layout';\nimport factory from '../ethereum/factory';\nimport web3 from '../ethereum/web3';\nimport { Link, Router } from '../routes'; //Not going to use Link, but it exists\n\nclass Subscribe extends Component {\n  state = {\n    email: '',\n    errorMessage: '',\n    successMessage: '',\n    loading: false,\n  };\n\n  onSubmit = async (event) => {\n    event.preventDefault(); //keeps browser from submitting form to backed server\n\n    this.setState({\n      loading: true,\n      errorMessage: '',\n      successMessage: '',\n    });\n\n    try {\n      // 3. Send a request to our API with the user's email address.\n      const res = await fetch('/api/subscribe', {\n        body: JSON.stringify({\n          email: this.state.email,\n        }),\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        method: 'POST',\n      });\n      Router.pushRoute('/');\n    } catch (err) {\n      this.setState({ errorMessage: err.message });\n    }\n\n    this.setState({\n      loading: false,\n      errorMessage: '',\n      successMessage: 'Success! ðŸŽ‰ You are now subscribed to the newsletter.',\n    });\n  };\n\n  render() {\n    return (\n      <Layout>\n        <Grid\n          container\n          stackable\n          verticalAlign=\"middle\"\n          style={{ padding: '8em 0em' }}\n        >\n          <Grid.Row>\n            <Header as=\"h3\" style={{ fontSize: '2em' }}>\n              Stay up to date with the latest developments{' '}\n            </Header>\n          </Grid.Row>\n          <Grid.Row>\n            <Grid.Column width={8}>\n              <Header as=\"h3\" style={{ fontSize: '2em' }}>\n                Stay up to date with the latest developments{' '}\n              </Header>\n              <Form\n                onSubmit={this.onSubmit}\n                error={!!this.state.errorMessage}\n                success={!!this.state.successMessage}\n              >\n                <Form.Field>\n                  <Input\n                    className=\"form-control mb-4 p-4\"\n                    required\n                    type=\"email\"\n                    placeholder=\"Email\"\n                    value={this.state.email}\n                    onChange={(event) =>\n                      this.setState({ email: event.target.value })\n                    }\n                  />\n                  <Message\n                    error\n                    header=\"Oops\"\n                    content={this.state.errorMessage}\n                  />\n                  <Message\n                    success\n                    header=\"Good news everyone!\"\n                    content={this.state.successMessage}\n                  />\n                  <Button\n                    loading={this.state.loading}\n                    style={{ marginTop: '10px' }}\n                    primary\n                  >\n                    Keep Me Updated!\n                  </Button>\n                </Form.Field>\n              </Form>\n            </Grid.Column>\n            <Grid.Column floated=\"right\" width={7}>\n              <Header as=\"h3\" style={{ fontSize: '2em' }}>\n                Interested in our initiative?\n              </Header>\n              <p style={{ fontSize: '1.33em' }}>\n                Become an early adopter to help shape the future and be part of\n                what comes next. Subscribe to the newsletter to stay up to date\n                with our progress!\n              </p>\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n      </Layout>\n    );\n  }\n}\n\nexport default Subscribe;\n"]},"metadata":{},"sourceType":"module"}