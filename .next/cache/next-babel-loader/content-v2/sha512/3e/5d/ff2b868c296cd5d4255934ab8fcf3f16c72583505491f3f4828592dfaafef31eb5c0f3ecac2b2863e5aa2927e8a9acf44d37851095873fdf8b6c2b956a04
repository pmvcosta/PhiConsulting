{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Pedro Costa\\\\Desktop\\\\ETHProj\\\\kickstart\\\\pages\\\\campaigns\\\\show.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport Layout from '../../components/Layout';\nimport Campaign from '../../ethereum/campaign';\nimport { Card } from 'semantic-ui-react';\n\nclass CampaignShow extends Component {\n  static async getInitialProps(props) {\n    //address is in the url due to routing\n    //const address = props.query.address; //this is the address of the campaign we want to show\n    const campaign = Campaign(props.query.address);\n    const summary = await campaign.methods.getSummary().call(); //this is an object, not an array\n\n    return {\n      minimumContribution: summary[0],\n      balance: summary[1],\n      requestsCount: summary[2],\n      approversCount: summary[3],\n      manager: summary[4]\n    };\n  }\n\n  renderCards() {\n    const {\n      balance,\n      manager,\n      minimumContribution,\n      approversCount\n    } = this.props;\n    const items = [{\n      header: manager,\n      meta: 'Address of manager',\n      description: 'The manager created thus campaign and can create requests to withdraw money ',\n      style: {\n        overflowWrap: 'break-word'\n      }\n    }];\n    return __jsx(Card.Group, {\n      items: items,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 12\n      }\n    });\n  }\n\n  render() {\n    return __jsx(Layout, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 7\n      }\n    }, __jsx(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }\n    }, \" Campaign Details \"), this.renderCards(), __jsx(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }\n    }, ' ', this.props.minimumContribution, \" \", this.props.balance, ' ', this.props.requestsCount, \" \", this.props.approversCount, ' ', this.props.manager, ' '));\n  }\n\n}\n\nexport default CampaignShow;","map":{"version":3,"sources":["C:/Users/Pedro Costa/Desktop/ETHProj/kickstart/pages/campaigns/show.js"],"names":["React","Component","Layout","Campaign","Card","CampaignShow","getInitialProps","props","campaign","query","address","summary","methods","getSummary","call","minimumContribution","balance","requestsCount","approversCount","manager","renderCards","items","header","meta","description","style","overflowWrap","render"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,SAASC,IAAT,QAAqB,mBAArB;;AAEA,MAAMC,YAAN,SAA2BJ,SAA3B,CAAqC;AACnC,eAAaK,eAAb,CAA6BC,KAA7B,EAAoC;AAClC;AACA;AACA,UAAMC,QAAQ,GAAGL,QAAQ,CAACI,KAAK,CAACE,KAAN,CAAYC,OAAb,CAAzB;AACA,UAAMC,OAAO,GAAG,MAAMH,QAAQ,CAACI,OAAT,CAAiBC,UAAjB,GAA8BC,IAA9B,EAAtB,CAJkC,CAI0B;;AAC5D,WAAO;AACLC,MAAAA,mBAAmB,EAAEJ,OAAO,CAAC,CAAD,CADvB;AAELK,MAAAA,OAAO,EAAEL,OAAO,CAAC,CAAD,CAFX;AAGLM,MAAAA,aAAa,EAAEN,OAAO,CAAC,CAAD,CAHjB;AAILO,MAAAA,cAAc,EAAEP,OAAO,CAAC,CAAD,CAJlB;AAKLQ,MAAAA,OAAO,EAAER,OAAO,CAAC,CAAD;AALX,KAAP;AAOD;;AAEDS,EAAAA,WAAW,GAAG;AACZ,UAAM;AACJJ,MAAAA,OADI;AAEJG,MAAAA,OAFI;AAGJJ,MAAAA,mBAHI;AAIJG,MAAAA;AAJI,QAKF,KAAKX,KALT;AAOA,UAAMc,KAAK,GAAG,CACZ;AACEC,MAAAA,MAAM,EAAEH,OADV;AAEEI,MAAAA,IAAI,EAAE,oBAFR;AAGEC,MAAAA,WAAW,EACT,8EAJJ;AAKEC,MAAAA,KAAK,EAAE;AAAEC,QAAAA,YAAY,EAAE;AAAhB;AALT,KADY,CAAd;AAUA,WAAO,MAAC,IAAD,CAAM,KAAN;AAAY,MAAA,KAAK,EAAEL,KAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;;AAEDM,EAAAA,MAAM,GAAG;AACP,WACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADF,EAEG,KAAKP,WAAL,EAFH,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,GADH,EAEG,KAAKb,KAAL,CAAWQ,mBAFd,OAEoC,KAAKR,KAAL,CAAWS,OAF/C,EAEwD,GAFxD,EAGG,KAAKT,KAAL,CAAWU,aAHd,OAG8B,KAAKV,KAAL,CAAWW,cAHzC,EAGyD,GAHzD,EAIG,KAAKX,KAAL,CAAWY,OAJd,EAIuB,GAJvB,CAHF,CADF;AAYD;;AAjDkC;;AAoDrC,eAAed,YAAf","sourcesContent":["import React, { Component } from 'react';\nimport Layout from '../../components/Layout';\nimport Campaign from '../../ethereum/campaign';\nimport { Card } from 'semantic-ui-react';\n\nclass CampaignShow extends Component {\n  static async getInitialProps(props) {\n    //address is in the url due to routing\n    //const address = props.query.address; //this is the address of the campaign we want to show\n    const campaign = Campaign(props.query.address);\n    const summary = await campaign.methods.getSummary().call(); //this is an object, not an array\n    return {\n      minimumContribution: summary[0],\n      balance: summary[1],\n      requestsCount: summary[2],\n      approversCount: summary[3],\n      manager: summary[4],\n    };\n  }\n\n  renderCards() {\n    const {\n      balance,\n      manager,\n      minimumContribution,\n      approversCount,\n    } = this.props;\n\n    const items = [\n      {\n        header: manager,\n        meta: 'Address of manager',\n        description:\n          'The manager created thus campaign and can create requests to withdraw money ',\n        style: { overflowWrap: 'break-word' },\n      },\n    ];\n\n    return <Card.Group items={items} />;\n  }\n\n  render() {\n    return (\n      <Layout>\n        <h3> Campaign Details </h3>\n        {this.renderCards()}\n        <h1>\n          {' '}\n          {this.props.minimumContribution} {this.props.balance}{' '}\n          {this.props.requestsCount} {this.props.approversCount}{' '}\n          {this.props.manager}{' '}\n        </h1>\n      </Layout>\n    );\n  }\n}\n\nexport default CampaignShow;\n"]},"metadata":{},"sourceType":"module"}