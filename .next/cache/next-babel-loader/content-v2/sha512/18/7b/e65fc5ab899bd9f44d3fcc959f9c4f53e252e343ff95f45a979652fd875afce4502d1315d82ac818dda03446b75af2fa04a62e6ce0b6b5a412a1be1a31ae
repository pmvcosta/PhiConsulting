{"ast":null,"code":"import Web3 from 'web3';\nvar web3; //so that it can be reassigned\n//typeof can be used to check if a variable is defined\n\nif (true && typeof window.web3 !== 'undefined') {\n  //inside browser, metamask available\n  web3 = new Web3(window.web3.currentProvider);\n} else {\n  //Not in browser (we are on the server) or metamask isnt available\n  //Set up our own provider using infura\n  var provider = new Web3.providers.HttpProvider('https://rinkeby.infura.io/v3/3a47dfdd4321468da86e76aa75ee63d3');\n  web3 = new Web3(provider); //Should add security measures for infura link\n}\n\nexport default web3; //const web3 = new Web3(window.web3.currentProvider);\n//Assumes that metamask already injects a web3 instance onto the page\n//Will fail if customer doesnt have metamask","map":{"version":3,"sources":["C:/Users/Pedro Costa/Desktop/ETHProj/kickstart/ethereum/web3.js"],"names":["Web3","web3","window","currentProvider","provider","providers","HttpProvider"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,MAAjB;AAEA,IAAIC,IAAJ,C,CAAU;AAEV;;AAEA,IAAI,QAAiC,OAAOC,MAAM,CAACD,IAAd,KAAuB,WAA5D,EAAyE;AACvE;AACAA,EAAAA,IAAI,GAAG,IAAID,IAAJ,CAASE,MAAM,CAACD,IAAP,CAAYE,eAArB,CAAP;AACD,CAHD,MAGO;AACL;AACA;AACA,MAAMC,QAAQ,GAAG,IAAIJ,IAAI,CAACK,SAAL,CAAeC,YAAnB,CACf,+DADe,CAAjB;AAGAL,EAAAA,IAAI,GAAG,IAAID,IAAJ,CAASI,QAAT,CAAP,CANK,CAOL;AACD;;AAED,eAAeH,IAAf,C,CAEA;AAEA;AAEA","sourcesContent":["import Web3 from 'web3';\n\nlet web3; //so that it can be reassigned\n\n//typeof can be used to check if a variable is defined\n\nif (typeof window !== 'undefined' && typeof window.web3 !== 'undefined') {\n  //inside browser, metamask available\n  web3 = new Web3(window.web3.currentProvider);\n} else {\n  //Not in browser (we are on the server) or metamask isnt available\n  //Set up our own provider using infura\n  const provider = new Web3.providers.HttpProvider(\n    'https://rinkeby.infura.io/v3/3a47dfdd4321468da86e76aa75ee63d3'\n  );\n  web3 = new Web3(provider);\n  //Should add security measures for infura link\n}\n\nexport default web3;\n\n//const web3 = new Web3(window.web3.currentProvider);\n\n//Assumes that metamask already injects a web3 instance onto the page\n\n//Will fail if customer doesnt have metamask\n"]},"metadata":{},"sourceType":"module"}