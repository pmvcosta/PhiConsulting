{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Pedro Costa\\\\Desktop\\\\ETHProj\\\\kickstart\\\\pages\\\\campaigns\\\\new.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport { Form, Button, Input, Message, Grid, Divider } from 'semantic-ui-react';\nimport Layout from '../../components/Layout';\nimport factory from '../../ethereum/factory';\nimport web3 from '../../ethereum/web3';\nimport { Link, Router } from '../../routes'; //Not going to use Link, but it exists\n\nclass CampaignNew extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      minimumContribution: '',\n      errorMessage: '',\n      loading: false\n    });\n\n    _defineProperty(this, \"onSubmit\", async event => {\n      event.preventDefault(); //keeps browser from submitting form to backed server\n\n      this.setState({\n        loading: true,\n        errorMessage: ''\n      });\n\n      try {\n        const accounts = await web3.eth.getAccounts(); //get Metamask accounts\n        //create check to verify submission success, i.e. if address now exists...\n\n        await factory.methods.createCampaign(this.state.minimumContribution).send({\n          from: accounts[0] //dont need to specify gas, Metamask handles that\n\n        }); //Campaign sucessfully created...\n\n        Router.pushRoute('/');\n      } catch (err) {\n        this.setState({\n          errorMessage: err.message\n        });\n      }\n\n      this.setState({\n        loading: false\n      });\n    });\n  }\n\n  render() {\n    return __jsx(Layout, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 7\n      }\n    }, __jsx(Divider, {\n      as: \"h4\",\n      className: \"header\",\n      horizontal: true,\n      style: {\n        margin: '3em 0em',\n        textTransform: 'uppercase'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }\n    }, __jsx(\"a\", {\n      href: \"#\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }\n    }, \"New Campaign\")), __jsx(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }\n    }, \" Create a Campaign \"), __jsx(Form, {\n      onSubmit: this.onSubmit,\n      error: !!this.state.errorMessage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }\n    }, __jsx(Form.Field, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }\n    }, __jsx(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }\n    }, \" Minimum Contribution \"), __jsx(Input, {\n      label: \"wei\",\n      labelPosition: \"right\",\n      value: this.state.minimumContribution,\n      onChange: event => this.setState({\n        minimumContribution: event.target.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }\n    }), __jsx(Message, {\n      error: true,\n      header: \"Oops\",\n      content: this.state.errorMessage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }\n    }), __jsx(Button, {\n      loading: this.state.loading,\n      style: {\n        marginTop: '10px'\n      },\n      primary: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }\n    }, \"Create!\"))));\n  }\n\n}\n\nexport default CampaignNew;","map":{"version":3,"sources":["C:/Users/Pedro Costa/Desktop/ETHProj/kickstart/pages/campaigns/new.js"],"names":["React","Component","Form","Button","Input","Message","Grid","Divider","Layout","factory","web3","Link","Router","CampaignNew","minimumContribution","errorMessage","loading","event","preventDefault","setState","accounts","eth","getAccounts","methods","createCampaign","state","send","from","pushRoute","err","message","render","margin","textTransform","onSubmit","target","value","marginTop"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Form, Button, Input, Message, Grid, Divider } from 'semantic-ui-react';\nimport Layout from '../../components/Layout';\nimport factory from '../../ethereum/factory';\nimport web3 from '../../ethereum/web3';\nimport { Link, Router } from '../../routes'; //Not going to use Link, but it exists\n\nclass CampaignNew extends Component {\n  state = {\n    minimumContribution: '',\n    errorMessage: '',\n    loading: false,\n  };\n\n  onSubmit = async (event) => {\n    event.preventDefault(); //keeps browser from submitting form to backed server\n\n    this.setState({\n      loading: true,\n      errorMessage: '',\n    });\n\n    try {\n      const accounts = await web3.eth.getAccounts(); //get Metamask accounts\n      //create check to verify submission success, i.e. if address now exists...\n      await factory.methods\n        .createCampaign(this.state.minimumContribution)\n        .send({\n          from: accounts[0], //dont need to specify gas, Metamask handles that\n        });\n      //Campaign sucessfully created...\n      Router.pushRoute('/');\n    } catch (err) {\n      this.setState({ errorMessage: err.message });\n    }\n\n    this.setState({ loading: false });\n  };\n\n  render() {\n    return (\n      <Layout>\n        <Divider\n          as=\"h4\"\n          className=\"header\"\n          horizontal\n          style={{ margin: '3em 0em', textTransform: 'uppercase' }}\n        >\n          <a href=\"#\">New Campaign</a>\n        </Divider>\n        <h3> Create a Campaign </h3>\n        <Form onSubmit={this.onSubmit} error={!!this.state.errorMessage}>\n          <Form.Field>\n            <label> Minimum Contribution </label>\n            <Input\n              label=\"wei\"\n              labelPosition=\"right\"\n              value={this.state.minimumContribution}\n              onChange={(event) =>\n                this.setState({ minimumContribution: event.target.value })\n              }\n            />\n            <Message error header=\"Oops\" content={this.state.errorMessage} />\n            <Button\n              loading={this.state.loading}\n              style={{ marginTop: '10px' }}\n              primary\n            >\n              Create!\n            </Button>\n          </Form.Field>\n        </Form>\n      </Layout>\n    );\n  }\n}\n\nexport default CampaignNew;\n"]},"metadata":{},"sourceType":"module"}