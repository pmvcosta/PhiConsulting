{"ast":null,"code":"import mailchimp from '@mailchimp/mailchimp_marketing';\nmailchimp.setConfig({\n  apiKey: process.env.MAILCHIMP_API_KEY,\n  server: process.env.MAILCHIMP_API_SERVER // e.g. us6\n\n});\nexport default (async (req, res) => {\n  const {\n    email\n  } = req.body;\n\n  if (!email) {\n    return res.status(400).json({\n      error: 'Email is required'\n    });\n  }\n\n  try {\n    await mailchimp.lists.addListMember(process.env.MAILCHIMP_AUDIENCE_ID, {\n      email_address: email,\n      status: 'subscribed'\n    });\n    return res.status(201).json({\n      error: ''\n    });\n  } catch (error) {\n    return res.status(500).json({\n      error: error.message || error.toString()\n    });\n  }\n});","map":{"version":3,"sources":["C:/Users/Pedro Costa/Desktop/ETHProj/kickstart/pages/api/subscribe.js"],"names":["mailchimp","setConfig","apiKey","process","env","MAILCHIMP_API_KEY","server","MAILCHIMP_API_SERVER","req","res","email","body","status","json","error","lists","addListMember","MAILCHIMP_AUDIENCE_ID","email_address","message","toString"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,gCAAtB;AAEAA,SAAS,CAACC,SAAV,CAAoB;AAClBC,EAAAA,MAAM,EAAEC,OAAO,CAACC,GAAR,CAAYC,iBADF;AAElBC,EAAAA,MAAM,EAAEH,OAAO,CAACC,GAAR,CAAYG,oBAFF,CAEwB;;AAFxB,CAApB;AAKA,gBAAe,OAAOC,GAAP,EAAYC,GAAZ,KAAoB;AACjC,QAAM;AAAEC,IAAAA;AAAF,MAAYF,GAAG,CAACG,IAAtB;;AAEA,MAAI,CAACD,KAAL,EAAY;AACV,WAAOD,GAAG,CAACG,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,MAAAA,KAAK,EAAE;AAAT,KAArB,CAAP;AACD;;AAED,MAAI;AACF,UAAMd,SAAS,CAACe,KAAV,CAAgBC,aAAhB,CAA8Bb,OAAO,CAACC,GAAR,CAAYa,qBAA1C,EAAiE;AACrEC,MAAAA,aAAa,EAAER,KADsD;AAErEE,MAAAA,MAAM,EAAE;AAF6D,KAAjE,CAAN;AAKA,WAAOH,GAAG,CAACG,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,MAAAA,KAAK,EAAE;AAAT,KAArB,CAAP;AACD,GAPD,CAOE,OAAOA,KAAP,EAAc;AACd,WAAOL,GAAG,CAACG,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,MAAAA,KAAK,EAAEA,KAAK,CAACK,OAAN,IAAiBL,KAAK,CAACM,QAAN;AAA1B,KAArB,CAAP;AACD;AACF,CAjBD","sourcesContent":["import mailchimp from '@mailchimp/mailchimp_marketing';\n\nmailchimp.setConfig({\n  apiKey: process.env.MAILCHIMP_API_KEY,\n  server: process.env.MAILCHIMP_API_SERVER, // e.g. us6\n});\n\nexport default async (req, res) => {\n  const { email } = req.body;\n\n  if (!email) {\n    return res.status(400).json({ error: 'Email is required' });\n  }\n\n  try {\n    await mailchimp.lists.addListMember(process.env.MAILCHIMP_AUDIENCE_ID, {\n      email_address: email,\n      status: 'subscribed',\n    });\n\n    return res.status(201).json({ error: '' });\n  } catch (error) {\n    return res.status(500).json({ error: error.message || error.toString() });\n  }\n};\n"]},"metadata":{},"sourceType":"module"}