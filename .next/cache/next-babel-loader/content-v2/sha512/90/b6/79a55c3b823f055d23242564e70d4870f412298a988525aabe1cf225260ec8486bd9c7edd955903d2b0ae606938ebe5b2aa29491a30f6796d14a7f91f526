{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Pedro Costa\\\\Desktop\\\\ETHProj\\\\kickstart\\\\pages\\\\campaigns\\\\new.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from \"react\";\nimport { Form, Button, Input, Message } from \"semantic-ui-react\";\nimport Layout from \"../../components/Layout\";\nimport factory from \"../../ethereum/factory\";\nimport web3 from \"../../ethereum/web3\";\n\nclass CampaignNew extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      minimumContribution: \"\",\n      errorMessage: \"\"\n    });\n\n    _defineProperty(this, \"onSubmit\", async event => {\n      event.preventDefault(); //keeps browser from submitting form to backed server\n\n      try {\n        const accounts = await web3.eth.getAccounts(); //get Metamask accounts\n\n        await factory.methods.createCampaign(this.state.minimumContribution).send({\n          from: accounts[0] //dont need to specify gas, Metamask handles that\n\n        });\n      } catch (err) {\n        this.setState({\n          errorMessage: err.message\n        });\n      }\n    });\n  }\n\n  render() {\n    return __jsx(Layout, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 7\n      }\n    }, __jsx(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }\n    }, \" Create a Campaign \"), __jsx(Form, {\n      onSubmit: this.onSubmit,\n      error: !!this.state.errorMessage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }\n    }, __jsx(Form.Field, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }\n    }, __jsx(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }\n    }, \" Minimum Contribution \"), __jsx(Input, {\n      label: \"wei\",\n      labelPosition: \"right\",\n      value: this.state.minimumContribution,\n      onChange: event => this.setState({\n        minimumContribution: event.target.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }\n    }), __jsx(Message, {\n      error: true,\n      header: \"Oops\",\n      content: this.state.errorMessage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }\n    }), __jsx(Button, {\n      style: {\n        marginTop: \"10px\"\n      },\n      primary: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }\n    }, \"Create!\"))));\n  }\n\n}\n\nexport default CampaignNew;","map":{"version":3,"sources":["C:/Users/Pedro Costa/Desktop/ETHProj/kickstart/pages/campaigns/new.js"],"names":["React","Component","Form","Button","Input","Message","Layout","factory","web3","CampaignNew","minimumContribution","errorMessage","event","preventDefault","accounts","eth","getAccounts","methods","createCampaign","state","send","from","err","setState","message","render","onSubmit","target","value","marginTop"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,KAAvB,EAA8BC,OAA9B,QAA6C,mBAA7C;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,OAAP,MAAoB,wBAApB;AACA,OAAOC,IAAP,MAAiB,qBAAjB;;AAEA,MAAMC,WAAN,SAA0BR,SAA1B,CAAoC;AAAA;AAAA;;AAAA,mCAC1B;AACNS,MAAAA,mBAAmB,EAAE,EADf;AAENC,MAAAA,YAAY,EAAE;AAFR,KAD0B;;AAAA,sCAMvB,MAAOC,KAAP,IAAiB;AAC1BA,MAAAA,KAAK,CAACC,cAAN,GAD0B,CACF;;AACxB,UAAI;AACF,cAAMC,QAAQ,GAAG,MAAMN,IAAI,CAACO,GAAL,CAASC,WAAT,EAAvB,CADE,CAC6C;;AAC/C,cAAMT,OAAO,CAACU,OAAR,CACHC,cADG,CACY,KAAKC,KAAL,CAAWT,mBADvB,EAEHU,IAFG,CAEE;AACJC,UAAAA,IAAI,EAAEP,QAAQ,CAAC,CAAD,CADV,CACe;;AADf,SAFF,CAAN;AAKD,OAPD,CAOE,OAAOQ,GAAP,EAAY;AACZ,aAAKC,QAAL,CAAc;AAAEZ,UAAAA,YAAY,EAAEW,GAAG,CAACE;AAApB,SAAd;AACD;AACF,KAlBiC;AAAA;;AAoBlCC,EAAAA,MAAM,GAAG;AACP,WACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADF,EAEE,MAAC,IAAD;AAAM,MAAA,QAAQ,EAAE,KAAKC,QAArB;AAA+B,MAAA,KAAK,EAAE,CAAC,CAAC,KAAKP,KAAL,CAAWR,YAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCADF,EAEE,MAAC,KAAD;AACE,MAAA,KAAK,EAAC,KADR;AAEE,MAAA,aAAa,EAAC,OAFhB;AAGE,MAAA,KAAK,EAAE,KAAKQ,KAAL,CAAWT,mBAHpB;AAIE,MAAA,QAAQ,EAAGE,KAAD,IACR,KAAKW,QAAL,CAAc;AAAEb,QAAAA,mBAAmB,EAAEE,KAAK,CAACe,MAAN,CAAaC;AAApC,OAAd,CALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAUE,MAAC,OAAD;AAAS,MAAA,KAAK,MAAd;AAAe,MAAA,MAAM,EAAC,MAAtB;AAA6B,MAAA,OAAO,EAAE,KAAKT,KAAL,CAAWR,YAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVF,EAWE,MAAC,MAAD;AAAQ,MAAA,KAAK,EAAE;AAAEkB,QAAAA,SAAS,EAAE;AAAb,OAAf;AAAsC,MAAA,OAAO,MAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAXF,CADF,CAFF,CADF;AAsBD;;AA3CiC;;AA8CpC,eAAepB,WAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { Form, Button, Input, Message } from \"semantic-ui-react\";\nimport Layout from \"../../components/Layout\";\nimport factory from \"../../ethereum/factory\";\nimport web3 from \"../../ethereum/web3\";\n\nclass CampaignNew extends Component {\n  state = {\n    minimumContribution: \"\",\n    errorMessage: \"\",\n  };\n\n  onSubmit = async (event) => {\n    event.preventDefault(); //keeps browser from submitting form to backed server\n    try {\n      const accounts = await web3.eth.getAccounts(); //get Metamask accounts\n      await factory.methods\n        .createCampaign(this.state.minimumContribution)\n        .send({\n          from: accounts[0], //dont need to specify gas, Metamask handles that\n        });\n    } catch (err) {\n      this.setState({ errorMessage: err.message });\n    }\n  };\n\n  render() {\n    return (\n      <Layout>\n        <h3> Create a Campaign </h3>\n        <Form onSubmit={this.onSubmit} error={!!this.state.errorMessage}>\n          <Form.Field>\n            <label> Minimum Contribution </label>\n            <Input\n              label=\"wei\"\n              labelPosition=\"right\"\n              value={this.state.minimumContribution}\n              onChange={(event) =>\n                this.setState({ minimumContribution: event.target.value })\n              }\n            />\n            <Message error header=\"Oops\" content={this.state.errorMessage} />\n            <Button style={{ marginTop: \"10px\" }} primary>\n              Create!\n            </Button>\n          </Form.Field>\n        </Form>\n      </Layout>\n    );\n  }\n}\n\nexport default CampaignNew;\n"]},"metadata":{},"sourceType":"module"}